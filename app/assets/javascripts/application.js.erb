//= require p5.min
//= require p5.speech
//= require playlist
//= require song
//= require bot_utility
let tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
let firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

let speech;
let player;
let botname = ["melody","multiplayer","melanie","malady","bloody","malayalam","modi","maladie","medically","man"];
let paused = true;
let started = false;

let playlist = new PlayList(playVideo,pauseVideo);


function setup() {
  noCanvas();
  initAnnyang();
  startSpeechRec();
  initSpeech();

  initPlayer();
  window.setInterval(checkSongProgression,1000);

  document.getElementById("previous").addEventListener("click", playlist.PlayPrevious);
  document.getElementById("next").addEventListener("click", playlist.PlayNext);
  document.getElementById("play").addEventListener("click", toggleVideo);
}

function initAnnyang(){
  if(annyang) {
    var commands = {
      '*all': gotSpeech
    };
    annyang.addCommands(commands);
  }
}

function initSpeech(){
  speech = new p5.Speech();
  speech.setLang('en-UK');
  speech.setVoice('Google UK English Female');
}
function stopSpeechRec(){
  annyang.abort();
  if(document.getElementById("voice-on"))
    document.getElementById("voice-on").id = 'voice-off';
}

function startSpeechRec(){
  annyang.start();
  if(document.getElementById("voice-off"))
    document.getElementById("voice-off").id = 'voice-on';
}

function gotSpeech(text) {
  if(text){
    processSentence(text);
  }
  else{
    console.log("the fuck u said?");
  }
}

function processSentence(sentence){
  data = Process(sentence);

  if(data.bot_called){
    switch(data.verb){
      case "play":
        switch(recognizeSpecialOperation(data.song_name)){
          case 0:
            playlist.Play(new Song(data.song_name));
            break;
          case 1:
            speech.speak("Loading songs like" + isolateSongsLike(data.song_name));
            playSimilarTrack(isolateSongsLike(data.song_name));
            break;
          case 2:
            speech.speak("Loading top hits");
            playTopTracks();
            break;
        }
        break;
      case "add": playlist.Add(new Song(data.song_name)); break;
      case "stop": playlist.pauseVideo(); break;
      case "next": playlist.PlayNext(); break;
      case "back": playlist.PlayPrevious(); break;
    }
  }
  else{
    console.log(sentence);
  }
}

function playSimilarTrack(name){
  //fetch("https://mmelody.herokuapp.com/api/v1/getsongslike/"+name)
  fetch("http://localhost:3000/api/v1/getsongslike/"+isolateSongsLike(data.song_name))
    .then(response => response.json())
    .then((data) => {
      let tracks = shuffle(data.infos);
      playlist.Clear();

      tracks.forEach(function(element) {
        playlist.Add(new Song(element["name"]+" "+element["artist"]));
      });
    playlist.startPlaylist();
  });
}

function playTopTracks(){
  fetch("http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=283eb42e49e8b0a3045c0c9edf3666bb&format=json")
    .then(response => response.json())
    .then((data) => {
      let tracks = shuffle(data.tracks.track);
      tracks.forEach(function(element) {
        playlist.Add(new Song(element.name+" "+element.artist.name));
      });
    playlist.startPlaylist();
  });
}

function shuffle(a) {
    for (let i = a.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
}
function initPlayer(){

  player = new YT.Player('player', {
    height: '270',
    width: '480',
    videoId: "",
    playerVars: {
      controls: 0,
      autoplay: 1,
      wmode: 'opaque',
      rel: 0,
      showinfo: 0
    },
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  });
}

function playVideo(){
  if(paused){
    paused = false;
    document.getElementById("play").id = 'pause';
    resumeVideo();
  }
  started = false;
  document.getElementById("track-name").innerHTML = playlist.current_song.name.substring(0,21)+"...";
  document.getElementById("player-container").style.visibility = 'visible';
  player.loadVideoById(playlist.current_song.url,0);
  speech.speak("Playing: " + playlist.current_song.name);
}


function checkSongProgression(){
  if(player && playlist.songs.length>0){
    document.getElementById("current-time").innerHTML = fmtMSS(Math.round(player.getCurrentTime()));
    document.getElementById("total-time").innerHTML = "-" +fmtMSS(Math.round(player.getDuration() - player.getCurrentTime()));
    document.getElementById("myRange").value = player.getCurrentTime() / player.getDuration() * 100;
    if(!started && player.getCurrentTime() >= 0){
      seekTo(0);
      resumeVideo();
      started = true;
    }
  }
}

function seekTo(a){
  player.seekTo(player.getDuration()*((a-1)/100), true);
}

function fmtMSS(s){return(s-(s%=60))/60+(9<s?':':':0')+s}

function onPlayerReady(e) {
  player.setPlaybackQuality("small");
  player.playVideo();
}
function onPlayerStateChange(e){
  if(e.data === 2) //paused
    pauseVideo();
  else if(e.data === 1) //play
    resumeVideo();
  else if(e.data == 0) { //finished video
    started = false;

    if(document.getElementById("pause"))
      document.getElementById("pause").id = 'play';
    player.pauseVideo();

    if(playlist.songsInQueue())
      playlist.PlayNext();
    else
      startSpeechRec();
    playlist.current_song.done = true;
  }
}

function pauseVideo(){
  paused = true;
  if(document.getElementById("pause"))
    document.getElementById("pause").id = 'play';
  player.pauseVideo();
  startSpeechRec();
}

function resumeVideo(){
  paused = false;
  if(document.getElementById("play"))
    document.getElementById("play").id = 'pause';
  player.playVideo();
  stopSpeechRec();
}

function toggleVideo(){
  if(!paused){
    pauseVideo();
  }
  else{
    resumeVideo();
  }

}
